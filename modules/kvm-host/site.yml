---
- name: Initialize KVM host(s)
  hosts: kvmhosts
  gather_facts: true
  roles:
    - rhsm
    - common-physical
    - ovs

- name: create vars for basevm dhcp
  hosts: auto_deploy_node
  gather_facts: false
  tasks:
    - name: Add hostnames to inventory
      add_host: 
        name: '{{ vm_name }}'
        group: basevm
        ansible_ssh_host: '{{ basevm_static_ip }}'

- name: add macaddress to basevm
  hosts: basevm
  gather_facts: false
  tasks:
    - name: create vars for basevm dhcp
      set_fact: 
        mgmt_ip: '{{ basevm_static_ip }}'
        mgmt_mac: '{{ basevm_mac }}'
        hostname: '{{ vm_name }}'

- name: Configure static DHCP leases
  hosts: 
    - nodes
    - basevm
  gather_facts: false
  roles:
    - dhcpd

- name: Setup base VM 
  hosts: kvmhosts[0]
  gather_facts: true
  roles:
    - create-vm

- name: wait for basevm
  hosts: auto_deploy_node
  gather_facts: false
  tasks:
   - name: wait for clones to come up
     wait_for:
       host: '{{ basevm_static_ip }}'
       state: started
       port: 22
       delay: 0

- name: Update base VM 
  hosts: basevm
  vars:
    ansible_ssh_host: "{{ basevm_static_ip }}"
  gather_facts: true
  roles:
    - rhsm
    - basevm-prep
  tags:
    - baseprep

# One-off tasks to distribute the base VM
- name: Clean and clone base VM
  hosts: kvmhosts[0]
  gather_facts: true
  roles:
    - basevm-clean
  tags:
    - clean

- name: Copy base VM to ansible host
  hosts: kvmhosts[0]
  tasks:
    - name: get qcow2 image from kvmhost0
      fetch:
        src: /var/lib/libvirt/images/basevm.qcow2
        dest: /tmp/basevm.qcow2
        flat: yes

- name: Copy base VM to all KVM hosts
  hosts: kvmhosts[1:]
  tasks:
    - name: copy qcow2 image to kvmhosts
      copy:
        src: /tmp/basevm.qcow2
        dest: /var/lib/libvirt/images/basevm.qcow2

- name: Copy base VM XML to ansible host
  hosts: kvmhosts[0]
  tasks:
    - name: copy base xml to autodeploy
      fetch:
        src: /etc/libvirt/qemu/basevm.xml
        dest: /tmp/basevm.xml
        flat: yes

- name: Sanitize base VM XML
  hosts: auto_deploy_node
  tasks:
    - lineinfile:
        dest: /tmp/basevm.xml
        regexp: "mac address"
        state: absent

- name: Define base VM on all KVM hosts
  hosts: kvmhosts
  tasks:
    - virt:
        name: basevm
        command: define
        xml: "{{ lookup('template', '/tmp/basevm.xml') }}"
        uri: qemu:///system
      ignore_errors: true

- name: Create and initialize clones
  hosts: kvmhosts
  gather_facts: false
  roles:
    - vm-initialization
  tags:
    - initialization

- name: wait for clones
  hosts: auto_deploy_node
  gather_facts: false
  tasks:
   - name: wait for clones to come up
     wait_for: 
       host: "{{ hostvars[item]['ansible_ssh_host'] }}"
       state: started 
       port: 22
       delay: 0
     with_items: "{{ groups['nodes'] }}"

- name: Configure clones
  hosts: nodes
  gather_facts: True
  vars:
    - disk: vda
  roles:
    - common-virtual
    - rhsm
    - vm-vlans
  tags:
    - config-clone

# this play is a temporary fix until a new play/role is developed to handle the change in size of vcpu/memory/disk
- name: Resize qcow2 disks
  hosts: kvmhosts
  gather_facts: true
  tasks:
    - name: run virsh blockresize
      vars:
      - new_size: 30G
      command: virsh blockresize {{ hostvars[item].hostname }} --path vda {{ new_size }}
      with_items:
        - "{{ groups['nodes'] }}"
      when: "'{{ hostvars[item].kvm_host }}' == '{{ inventory_hostname }}'"
  tags:
    - disk-resize

# shut down the clones so we can update the VM XML while offline
#- name: Shutdown VMs before updating hardware
#  hosts: nodes
#  tasks:
#    - name: run shutdown
#      shell: shutdown -h now
#    - name: pause while clones shutdown
#      pause:
#        seconds: 15

# update the VMs, bring VMs online at the end
#- name: Update VM XML with additional hardware
#  hosts: kvmhosts
#  gather_facts: true
#  roles:
#    - vm-hardware

- name: Restart updated clones
  hosts: nodes
  gather_facts: true
  tasks:
    - name: wait for guest to start
      wait_for:
        host: '{{ ansible_ssh_host }}'
        state: started
        port: 22
        delay: 10
        timeout: 300

    - name: resize guest filesystemi
      filesystem:
        dev: /dev/vda1
        fstype: xfs
        resizefs: yes
     # command: xfs_growfs /dev/vda1
