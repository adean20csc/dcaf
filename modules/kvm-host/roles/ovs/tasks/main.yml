---
# Backup ifcfg file
- name: Backing up ifcfg file for mgmt_nic
  shell: cp /etc/sysconfig/network-scripts/ifcfg-{{mgmt_nic}} /etc/sysconfig/network-scripts/orig-ifcfg-{{mgmt_nic}}
  tags:
    - mgmt_bridge

# Copy ifcfg-em3 file to br0
- name: Convert ifcfg file for bridge config
  shell: mv /etc/sysconfig/network-scripts/ifcfg-{{mgmt_nic}} /etc/sysconfig/network-scripts/ifcfg-br0
  tags:
    - mgmt_bridge

- name: Change device name in ifcfg file
  lineinfile:
    dest: /etc/sysconfig/network-scripts/ifcfg-br0
    regexp: '^DEVICE='
    line: 'DEVICE=br0'
  tags:
    - mgmt_bridge

- name: remove HW address from ifcfg-br0
  lineinfile:
    dest: /etc/sysconfig/network-scripts/ifcfg-br0
    regexp: '^HWADDR='
    state: absent
  tags:
   - mgmt_bridge


# Copy over purged ifcfg-em3 file
- name: Copy ifcfg file for mgmt_nic
  template:
    src: ifcfg-em3.j2
    dest: /etc/sysconfig/network-scripts/ifcfg-{{mgmt_nic}}
  tags:
    - mgmt_bridge

- name: Restart interfaces 
  shell: ifdown {{mgmt_nic}} ; ifup {{mgmt_nic}} ; ifup br0
  tags:
    - mgmt_bridge

# Check to see if all needed interfaces exist
- name: Check for all needed VLAN-tagged interfaces
  shell: ip link show {{ item.port }}
  with_items: '{{ ovs_bridges }}'
  register: iplink_output
  failed_when: "'does not exist' in iplink_output.stderr"

- name: Backup all bond vlan files
  shell: 'cp /etc/sysconfig/network-scripts/ifcfg-{{ item.port }} /etc/sysconfig/network-scripts/orig-ifcfg-{{ item.port }}'
  with_items: '{{ ovs_bridges }}'

- name: update all bond vlans files
  template: 
    src: ifcfg-bond.j2
    dest: /etc/sysconfig/network-scripts/ifcfg-{{item.port}}
  with_items: '{{ovs_bridges}}'


- name: Copy ifcfg-ovsbr template
  template:
    src: ifcfg-ovsbr.j2
    dest: /etc/sysconfig/network-scripts/ifcfg-ovsbr{{ item.value['vlan'] }}
  with_dict: '{{ vlan_interface }}'

- name: Restart bond0 interfaces
  shell: 'ifdown {{ item.port }} ; ifup {{ item.port }}'
  with_items: '{{ ovs_bridges }}'

- name: Bring up ovsbr bridges
  command: 'ifup {{ item.name }}'
  with_items: '{{ ovs_bridges }}'

- name: Check for libvirt networks
  command: virsh net-info {{ item.name }}
  with_items: "{{ libvirt_networks }}"
  ignore_errors: true
  register: libvirt_check

- name: Create libvirt network XML files
  template:
    src: lvnet.xml.j2
    dest: /tmp/{{ item.name }}.xml
  with_items: '{{ libvirt_networks }}'
  when: libvirt_check|failed

- name: Define libvirt networks on OVS bridges
  command: virsh net-define /tmp/{{ item.name }}.xml
  with_items: '{{ libvirt_networks }}'
  when: libvirt_check|failed

- name: Start new libvirt networks
  command: virsh net-start {{ item.name }}
  with_items: '{{ libvirt_networks }}'

- name: Enable auto-start for libvirt networks
  command: virsh net-autostart {{ item.name }}
  with_items: '{{ libvirt_networks }}'
  when: libvirt_check|failed
