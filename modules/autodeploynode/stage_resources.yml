---
# This playbook will prepare the staging directories and retrieve the automation resources for the
# autodeploynode. The resources will be staged locally in the /opt/autodeploy/projects/ and
# opt/autodeploy/resources/ directories.

- name: Stage DCAF automation resources on autodeploynode
  gather_facts: true
  hosts: localhost

  tasks:

    - name: Install required support packages
      yum:
        pkg: "{{ item }}"
        state: present
      with_items: "{{ autodeploy_support_pkgs }}"
      tags: pkgs

    - name: Create the staging directories in /opt/autodeploy
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ projects_base_path }}"
        - "{{ resources_base_path }}"
      tags: paths

    - name: Create the resource directories in the staging directories
      file:
        path: "{{ resources_base_path }}/{{ item }}"
        state: directory
      with_items: "{{ resource_dirs }}"
      tags: paths

    - name: Clone the project repos from Git
      git:
        repo: "{{ item.repo }}"
        dest: "{{ projects_base_path }}/{{ item.name }}"
      with_items: "{{ git_repos }}"
      ignore_errors: true

    - name: Checkout the latest tagged version
      shell: "git checkout $(git describe --abbrev=0 --tags)"
      args:
        chdir: "{{ projects_base_path }}/{{ item.name }}"
      with_items: "{{ git_repos }}"

    - name: Check if RHEL DVD ISO file exists in /opt/autodeploy/resources/ISO
      stat:
        path: "{{ iso_path }}/{{ rhel_iso_image }}"
      register: rhel_iso
      tags: iso

# There two separate selenium downloads here because the authtoken on the link will time out
    - name: Find the RHEL DVD ISO file url
      selenium:
        url: "{{ rhel_download_url }}"
        username: "{{ rhn_user }}"
        password: "{{ rhn_pass }}"
        username_element_id: username
        password_element_id: password
        xpath: '//*[contains(@href,"{{ rhel_iso_image }}")]'
      register: rhel_get_url
      when: not (rhel_iso.stat.exists)
      tags: iso

    - name: Download the RHEL DVD ISO file to /opt/autodeploy/resources/ISO
      get_url:
        url: "{{ rhel_get_url.url }}"
        dest: "{{ iso_path }}"
      when: not (rhel_iso.stat.exists)
      tags: iso
