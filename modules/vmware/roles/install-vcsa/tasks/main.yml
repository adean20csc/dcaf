---

- name: Gather all registered virtual machines
  vmware_vm_facts: hostname={{ esxi_host }} username={{ esxi_username }} password={{ site_passwd }}
  register: vmware_facts
  delegate_to: localhost

- name: Use OVFTool to deploy vCenter Appliance
  command: /usr/bin/ovftool --acceptAllEulas --skipManifestCheck
             --noSSLVerify
             --disableVerification
             --X:injectOvfEnv --powerOn "--net:Network 1={{vm_network}}"
             --datastore="{{ vm_datastore }}"
             --diskMode=thick
             --name="{{ vcsa_vmname }}"
             --prop:vami.hostname="{{vcsa_hostname}}"
             --prop:vami.DNS.VMware_vCenter_Server_Appliance="{{ vcsa_dns }}"
             --prop:vami.gateway.VMware_vCenter_Server_Appliance="{{ vcsa_gateway }}"
             --prop:vami.ip0.VMware_vCenter_Server_Appliance="{{ vcsa_ip }}"
             --prop:vami.netmask0.VMware_vCenter_Server_Appliance="{{ vcsa_netmask }}"
             {{ vcsa_ova }} 'vi://{{ esxi_username }}:{{ esxi_password }}@{{ esxi_host }}/'
  register: ovftool_result
  when: vmware_facts["virtual_machines"][vcsa_vmname] is not defined
  delegate_to: localhost

- name: Wait for the vCenter appliance to boot
  local_action: wait_for port=22 host="{{ vcsa_ip }}"
                search_regex=OpenSSH
                delay=10
                timeout=300
  when: ovftool_result.changed

- name: Add vCenter guest as inventory
  add_host: name={{ vcsa_ip }} groups=vcenter ansible_ssh_user=root ansible_ssh_pass=vmware
